// TCLL example

fn putchar(ch: char): void {
  // asm declares a block that is pure assembly
  asm {
    pwrite ch, 0, 0, 0;
  }
}

fn putstr(str: @char): void {
  for (var i: int = 0; $(str+i) != '\0'; i++) {
    putchar($(str+i));
  }
}

// fn declares a regular function
// @<type> declares a pointer to a value
// @array declares a pointer to a set of Things
fn printf(fmt: @char, args: @array): void {
  // $var fetches the value of pointer 'var'
  while ($fmt != '\0') {
    if ($fmt == '%') {
      fmt++;
      if ($fmt == '%') {
        putchar('%');
      } else if ($fmt == 's') {
        var c: @char = $args;
        args++;
        putstr(c);
      } else if ($fmt == 'd') {
        var num: char[255];
        var c: int = $args;
        args++;
        itoa(c, @num);
        putstr(@num);
      } else {
        putchar($fmt);
      }
    } else {
      putchar($fmt);
    }
    fmt++;
  }
}

fn main(): void {
  // @ creates a pointer to something, in this case an empty array
  printf("Hello, world\n", @{});
}
